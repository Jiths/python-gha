import unittest
import gha.gha
import numpy as np
from numpy.testing import *
from math import *

fit_data1 = np.array([[-1.76586391869932,-0.91392532736063],
[-1.38289715070277,-0.502829586621374],
[-0.618779826909304,-0.408257109113038],
[-0.279251442290843,-0.469211537856609],
[-0.617764072492719,-0.565175158903003],
[-1.67860568827018,-0.845086738467216],
[-0.611263827420771,-0.0395743944682181],
[0.296234296169132,-0.65233340440318],
[-0.81200323626399,0.160686868242919],
[0.851336521562189,0.182786221150309]], dtype=np.double)

fit_data1_R_result = np.array([[0.9104617, 0.4135934],[0.4135934, -0.9104617]], dtype=np.double)

fit_data2 = np.array([[0.82154324837029,1.02822455205023,0.816867631161585,1.43172957585193,-0.211356920888647],
[0.158811071654782,0.477836100151762,0.628777307458222,0.468563350616023,0.15094120730646],
[0.267525406787172,0.853766672546044,1.29445294477046,0.975737085798755,0.440686272224411],
[0.522608259925619,0.845700737321749,0.67850524187088,0.878021024400368,-0.167195495450869],
[0.219620030373335,1.16526521905325,1.63568942062557,0.909664262318984,0.470424201572314],
[0.673377133207396,1.19049952598289,1.30780894239433,1.46406368282624,0.117309416411445],
[0.892852986464277,1.47818981576711,0.796975912293419,1.10449206945486,-0.68121390347369],
[0.951930664712563,1.78414147952572,1.21043186890893,1.33015171880834,-0.573709610616788],
[0.227902331855148,0.410953311249614,0.388058034703135,0.432909387163818,-0.0228952765464783],
[0.951077690348029,1.02105829492211,0.699801568407565,1.58089865418151,-0.321256726514548],
[0.863840530393645,1.56053472682834,1.46988949552178,1.63703582948074,-0.0906452313065529],
[0.482901901938021,1.42585238837637,1.58202284877189,1.12197426427156,0.156170460395515],
[0.986740520223975,1.26958538452163,0.516681112116203,1.22057676804252,-0.752904272405431],
[0.0473130554892123,0.123702708631754,0.414710842771456,0.385634245118126,0.291008134139702],
[0.953716051299125,1.65761092072353,1.11976985237561,1.36959103425033,-0.537841068347916],
[0.724201666424051,1.6814508147072,1.90844193147495,1.67539444961585,0.226991116767749],
[0.505472009070218,1.31346420105547,0.831049491651356,0.528529308736324,-0.482414709404111],
[0.143367370823398,1.00356849376112,0.972464806400239,0.255631054285914,-0.0311036873608828],
[0.971689920173958,1.56363604986109,1.38873743615113,1.76848122663796,-0.174898613709956],
[0.999588234815747,1.98116715671495,1.6615385315381,1.67954784445465,-0.319628625176847],], dtype=np.double)

fit_data2_R_result = np.array([
[-0.3078237, -0.5827913, -0.5127978, -0.5456539,  0.06999346],
[-0.4001723, -0.1142118,  0.5788098, -0.1073231,  0.69302151],
[0.1980514, -0.5425577, -0.2215321,  0.7171283, 0.32102553],
], dtype=np.double)

class TestGHA(unittest.TestCase):
	def test_create(self):
		g = gha.GHA(4,10)
	def test_fit1(self):
		g = gha.GHA(2,2,dtype=np.double)
		N, _ = fit_data1.shape
		for epoch in range(500):
			for n in range(N):
				g.partial_fit(fit_data1[n], 0.01, True)
		assert_array_almost_equal(g._W, fit_data1_R_result, 2)
	def test_fit2(self):
		g = gha.GHA(3,5,dtype=np.double)
		N, _ = fit_data2.shape
		for epoch in range(500):
			for n in range(N):
				g.partial_fit(fit_data2[n], 0.01, True)
		assert_array_almost_equal(g._W, fit_data2_R_result, 2)

if __name__ == '__main__':
	unittest.main()
